# Generated by Django 3.1.2 on 2021-11-30 01:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('companyid', models.IntegerField(db_column='CompanyID', primary_key=True, serialize=False)),
                ('companyname', models.CharField(blank=True, db_column='CompanyName', max_length=500, null=True)),
                ('sector', models.CharField(blank=True, db_column='Sector', max_length=500, null=True)),
                ('industry', models.CharField(blank=True, db_column='Industry', max_length=500, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=500, null=True)),
                ('marketcap', models.FloatField(blank=True, db_column='MarketCap', null=True)),
                ('companydescription', models.CharField(blank=True, db_column='CompanyDescription', max_length=5000, null=True)),
                ('logo', models.CharField(blank=True, db_column='Logo', max_length=500, null=True)),
            ],
            options={
                'db_table': 'Company',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('exchangename', models.CharField(db_column='ExchangeName', max_length=100, primary_key=True, serialize=False)),
                ('exchangelocation', models.CharField(blank=True, db_column='ExchangeLocation', max_length=100, null=True)),
                ('timezone', models.CharField(blank=True, db_column='TimeZone', max_length=10, null=True)),
            ],
            options={
                'db_table': 'Exchange',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('tier', models.CharField(db_column='Tier', max_length=2, primary_key=True, serialize=False)),
                ('percentile', models.FloatField(blank=True, db_column='Percentile', null=True)),
                ('color', models.CharField(blank=True, db_column='Color', max_length=100, null=True)),
            ],
            options={
                'db_table': 'Ranking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stocks',
            fields=[
                ('tickersymbol', models.CharField(db_column='TickerSymbol', max_length=10, primary_key=True, serialize=False)),
                ('yoyrevenue', models.FloatField(blank=True, db_column='YoYRevenue', null=True)),
                ('ps', models.FloatField(blank=True, db_column='PS', null=True)),
                ('grossmargins', models.FloatField(blank=True, db_column='GrossMargins', null=True)),
                ('totalcash', models.FloatField(blank=True, db_column='TotalCash', null=True)),
                ('totaldebt', models.FloatField(blank=True, db_column='TotalDebt', null=True)),
                ('ebitda', models.FloatField(blank=True, db_column='EBITDA', null=True)),
                ('recommendationmean', models.FloatField(blank=True, db_column='RecommendationMean', null=True)),
            ],
            options={
                'db_table': 'Stocks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('userlogin', models.CharField(db_column='UserLogin', max_length=100, primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=100, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Watchlist',
            fields=[
                ('watchlistid', models.AutoField(db_column='WatchlistID', primary_key=True, serialize=False)),
                ('watchlistname', models.CharField(blank=True, db_column='WatchlistName', max_length=100, null=True)),
                ('datecreated', models.DateTimeField(blank=True, db_column='DateCreated', null=True)),
            ],
            options={
                'db_table': 'Watchlist',
            },
        ),
        migrations.CreateModel(
            name='Belongsto',
            fields=[
                ('watchlistid', models.OneToOneField(db_column='WatchlistID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.watchlist')),
            ],
            options={
                'db_table': 'BelongsTo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Filters',
            fields=[
                ('userlogin', models.OneToOneField(db_column='UserLogin', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.users')),
                ('stockfilter', models.CharField(db_column='StockFilter', max_length=100)),
            ],
            options={
                'db_table': 'Filters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Insideof',
            fields=[
                ('tickersymbol', models.OneToOneField(db_column='TickerSymbol', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.stocks')),
            ],
            options={
                'db_table': 'InsideOf',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Prices',
            fields=[
                ('tickersymbol', models.OneToOneField(db_column='TickerSymbol', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.stocks')),
                ('pricedate', models.DateTimeField(db_column='PriceDate')),
                ('openprice', models.FloatField(blank=True, db_column='OpenPrice', null=True)),
                ('closeprice', models.FloatField(blank=True, db_column='ClosePrice', null=True)),
                ('volume', models.IntegerField(blank=True, db_column='Volume', null=True)),
            ],
            options={
                'db_table': 'Prices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Watches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickersymbol', models.ForeignKey(db_column='TickerSymbol', on_delete=django.db.models.deletion.DO_NOTHING, to='api.stocks')),
                ('watchlistid', models.ForeignKey(db_column='WatchlistID', on_delete=django.db.models.deletion.DO_NOTHING, to='api.watchlist')),
            ],
            options={
                'db_table': 'Watches',
                'unique_together': {('watchlistid', 'tickersymbol')},
            },
        ),
    ]
